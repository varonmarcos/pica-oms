package com.kallSonys.business.Imple;

import java.util.Map;

import javax.ejb.EJB;
import javax.ejb.Remote;
import javax.ejb.Stateless;

import com.kallSonys.business.Serv.CustomerServiceLocal;
import com.kallSonys.business.consts.CustomerConsts;
import com.kallSonys.business.dto.CustomerDTO;
import com.kallSonys.common.dal.jpa.entitys.Customertype;
import com.kallSonys.common.dal.jpa.facade.CustomerFacadeLocal;
import com.kallSonys.common.dal.jpa.facade.CustomertypeFacadeLocal;
import com.kallSonys.common.dal.jpa.entitys.Customer;

/**
 * @author Juan Pablo Aranda Galvis
 *
 */
@Stateless(name="CustomerServiceBean", mappedName = "CustomerServiceBean")
@Remote(CustomerServiceLocal.class)
public class CustomerServiceBean implements CustomerServiceLocal {

	@EJB
	private CustomerFacadeLocal customerFacade;
	@EJB
	private CustomertypeFacadeLocal customerTypeFacade;
	
	/* (non-Javadoc)
	 * @see com.kallSonys.business.Interfaces.CustomerServicesLocal#createCustomer(com.kallSonys.common.dal.jpa.entitys.Customer)
	 */
	@Override
	public Boolean createCustomer(CustomerDTO customerDTO) {
		
		Boolean res=Boolean.FALSE;
		//comentado temporalmente
		
		if(customerFacade.createAndConfirm(this.convertCustomerWebToDB(customerDTO))){
			return Boolean.TRUE;
		}
		/**/
		return res;
	}

	/* (non-Javadoc)
	 * @see com.kallSonys.business.Interfaces.CustomerServicesLocal#getCustomers()
	 */
	@Override
	public CustomerDTO getCustomers() {
		// TODO Auto-generated method stub
		return null;
	}
	
	//Comentado temporalmente
	
	private Customer convertCustomerWebToDB(CustomerDTO customerDTO){
		Customer cus=new Customer();
		cus.setCustid(customerDTO.getIdCliente());
		cus.setFname(customerDTO.getNombreCliente());
		cus.setLname(customerDTO.getApellidoCliente());
		cus.setEmail(customerDTO.getEmail());
		cus.setCreditcardtype(customerDTO.getTipoTarjetaCredito());
		cus.setCreditcardnumer(customerDTO.getNumeroTarjetaCredito());
		cus.setPasswordd(customerDTO.getPassword());
		cus.setCustomertype(this.getDefaultCustomerType());
		return cus;
	}
	
	private CustomerDTO convertCustomerBusinessToWeb(Customer cus){
		CustomerDTO cusDTO=new CustomerDTO();
		cusDTO.setIdCliente(cus.getCustid());
		cusDTO.setNombreCliente(cus.getFname());
		cusDTO.setApellidoCliente(cus.getLname());
		cusDTO.setEmail(cus.getEmail());
		cusDTO.setTipoTarjetaCredito(cus.getCreditcardtype());
		cusDTO.setNumeroTarjetaCredito(cus.getCreditcardnumer());
		return cusDTO;
	}
	/**/
		private Customertype getDefaultCustomerType(){
		Customertype customertype=customerTypeFacade.find(CustomerConsts.CUSTOMER_TYPE_DEFAULT);
		return customertype;
	}

		@Override
		public CustomerDTO getCustomerByIdentificador(Map<String, Object> parameters) {
			CustomerDTO cusDTO = null;
			Customer customer;
			try {
				
				//Buscamos por Identificador de Cliente
				customer=this.customerFacade.find(parameters.get(CustomerConsts.IDENTIFICACION_FILTER));
				cusDTO=this.convertCustomerBusinessToWeb(customer);
				
			}catch (Exception e) {
				e.printStackTrace();
			}
			return cusDTO;
			
		}

		@Override
		public CustomerDTO getCustomerByIdProduct(Map<String, Object> idProducto) {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public CustomerDTO getCustomerByIdFacturacion(
				Map<String, Object> facturacion) {
			// TODO Auto-generated method stub
			return null;
		}

}
